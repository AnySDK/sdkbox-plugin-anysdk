--- AppDelegate.cpp	2015-03-13 05:25:46.000000000 +0800
+++ AppDelegate.cpp	2015-10-23 17:28:36.000000000 +0800
@@ -4,6 +4,13 @@
 #include "cocos2d.h"
 #include "lua_module_register.h"
 
+#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID || CC_TARGET_PLATFORM == CC_PLATFORM_IOS)
+#include "AgentManager.h"
+#include "anysdkbindings.h"
+#include "anysdk_manual_bindings.h"
+using namespace anysdk::framework;
+#endif
+
 using namespace CocosDenshion;
 
 USING_NS_CC;
@@ -16,6 +23,10 @@
 AppDelegate::~AppDelegate()
 {
     SimpleAudioEngine::end();
+    
+#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID || CC_TARGET_PLATFORM == CC_PLATFORM_IOS)
+    AgentManager::getInstance()->unloadAllPlugins();
+#endif
 }
 
 //if you want a different context,just modify the value of glContextAttrs
@@ -38,6 +49,22 @@
 
 bool AppDelegate::applicationDidFinishLaunching()
 {
+#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID || CC_TARGET_PLATFORM == CC_PLATFORM_IOS)
+    /**
+     * appKey、appSecret、privateKey需要从打包工具中游戏管理界面获取，替换
+     * oauthLoginServer参数是游戏服务提供的用来做登陆验证转发的接口地址。
+     */
+    std::string oauthLoginServer = "OAUTH_LOGIN_SERVER";
+    std::string appKey = "APP_KEY";
+    std::string appSecret = "APP_SERCRET";
+    std::string privateKey = "PRIVATE_KEY";
+    
+    AgentManager* pAgent = AgentManager::getInstance();
+    pAgent->init(appKey,appSecret,privateKey,oauthLoginServer);
+    
+    //使用框架中代理类进行插件初始化
+    pAgent->loadAllPlugins();
+#endif
     // set default FPS
     Director::getInstance()->setAnimationInterval(1.0 / 60.0f);
    
@@ -51,7 +78,13 @@
 
     LuaStack* stack = engine->getLuaStack();
     stack->setXXTEAKeyAndSign("2dxLua", strlen("2dxLua"), "XXTEA", strlen("XXTEA"));
-    
+  
+#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID || CC_TARGET_PLATFORM == CC_PLATFORM_IOS)
+    lua_getglobal(stack->getLuaState(), "_G");
+    tolua_anysdk_open(stack->getLuaState());
+    tolua_anysdk_manual_open(stack->getLuaState());
+    lua_pop(stack->getLuaState(), 1);
+#endif
     if (engine->executeScriptFile("src/main.lua"))
     {
         return false;
