--- AppDelegate.cpp	2015-09-10 17:09:24.000000000 +0800
+++ AppDelegate.cpp	2015-05-14 13:14:58.000000000 +0800
@@ -28,13 +28,6 @@
 #include "platform/ios/JavaScriptObjCBridge.h"
 #endif
 
-#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID || CC_TARGET_PLATFORM == CC_PLATFORM_IOS)
-#include "AgentManager.h"
-#include "jsb_anysdk_protocols_auto.hpp"
-#include "manualanysdkbindings.hpp"
-using namespace anysdk::framework;
-#endif
-
 USING_NS_CC;
 using namespace CocosDenshion;
 
@@ -45,10 +38,6 @@
 AppDelegate::~AppDelegate()
 {
     ScriptEngineManager::destroyInstance();
-            
-#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID || CC_TARGET_PLATFORM == CC_PLATFORM_IOS)
-    AgentManager::getInstance()->unloadAllPlugins();
-#endif
 }
 
 void AppDelegate::initGLContextAttrs()
@@ -60,22 +49,6 @@
 
 bool AppDelegate::applicationDidFinishLaunching()
 {
-#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID || CC_TARGET_PLATFORM == CC_PLATFORM_IOS)
-    /**
-     * appKey、appSecret、privateKey需要从打包工具中游戏管理界面获取，替换
-     * oauthLoginServer参数是游戏服务提供的用来做登陆验证转发的接口地址。
-     */
-    std::string oauthLoginServer = "OAUTH_LOGIN_SERVER";
-    std::string appKey = "APP_KEY";
-    std::string appSecret = "APP_SERCRET";
-    std::string privateKey = "PRIVATE_KEY";
-    
-    AgentManager* pAgent = AgentManager::getInstance();
-    pAgent->init(appKey,appSecret,privateKey,oauthLoginServer);
-    
-    //使用框架中代理类进行插件初始化
-    pAgent->loadAllPlugins();
-#endif
     // initialize director
     auto director = Director::getInstance();
     auto glview = director->getOpenGLView();
@@ -134,11 +107,6 @@
     
     // 3d extension can be commented out to reduce the package
     sc->addRegisterCallback(register_all_cocos2dx_3d_extension);
-   
-#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID || CC_TARGET_PLATFORM == CC_PLATFORM_IOS)	
-	sc->addRegisterCallback(register_all_anysdk_framework);
-    sc->addRegisterCallback(register_all_anysdk_manual);
-#endif 
     
 #if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID)
     sc->addRegisterCallback(JavascriptJavaBridge::_js_register);
