--- AppDelegate.cpp	2014-12-11 11:53:24.000000000 +0800
+++ AppDelegate.cpp	2015-11-02 14:44:36.000000000 +0800
@@ -15,6 +15,12 @@
 #include "jsb_opengl_registration.h"
 #include "XMLHTTPRequest.h"
 #include "jsb_websocket.h"
+#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID || CC_TARGET_PLATFORM == CC_PLATFORM_IOS)
+#include "AgentManager.h"
+#include "jsb_anysdk_manual.hpp"
+#include "jsb_anysdk_auto.hpp"
+using namespace anysdk::framework;
+#endif
 
 USING_NS_CC;
 using namespace CocosDenshion;
@@ -26,10 +32,29 @@
 AppDelegate::~AppDelegate()
 {
     CCScriptEngineManager::purgeSharedManager();
+#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID || CC_TARGET_PLATFORM == CC_PLATFORM_IOS)
+    AgentManager::getInstance()->unloadAllPlugins();
+#endif
 }
 
 bool AppDelegate::applicationDidFinishLaunching()
 {
+#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID || CC_TARGET_PLATFORM == CC_PLATFORM_IOS)
+    /**
+     * appKey、appSecret、privateKey需要从打包工具中游戏管理界面获取，替换
+     * oauthLoginServer参数是游戏服务提供的用来做登陆验证转发的接口地址。
+     */
+    std::string oauthLoginServer = "OAUTH_LOGIN_SERVER";
+    std::string appKey = "APP_KEY";
+    std::string appSecret = "APP_SERCRET";
+    std::string privateKey = "PRIVATE_KEY";
+    
+    AgentManager* pAgent = AgentManager::getInstance();
+    pAgent->init(appKey,appSecret,privateKey,oauthLoginServer);
+    
+    //使用框架中代理类进行插件初始化
+    pAgent->loadAllPlugins();
+#endif
     // initialize director
     CCDirector *pDirector = CCDirector::sharedDirector();
     pDirector->setOpenGLView(CCEGLView::sharedOpenGLView());
@@ -53,6 +78,10 @@
     sc->addRegisterCallback(JSB_register_opengl);
     sc->addRegisterCallback(MinXmlHttpRequest::_js_register);
     sc->addRegisterCallback(register_jsb_websocket);
+#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID || CC_TARGET_PLATFORM == CC_PLATFORM_IOS)
+    sc->addRegisterCallback(register_all_anysdk);
+    sc->addRegisterCallback(register_all_anysdk_manual);
+#endif
 
     sc->start();
     
